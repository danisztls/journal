#!/bin/bash
root="$HOME/Workshop"
now="$root/journal-now"
past="$root/journal-past"
hist="$root/journal-history"
buffer="/tmp/$USER/journal-buffer"

[ "$1" ] || (echo -e "HELP:
\t'show' will print the tasks in screen;
\t'diff' will print the changes in the backlog between now and past;
\t'commit' will save the changes to the history file and git commit." && exit)

# Future Options
# git_hook = true

# Colors
normal=$(printf '\033[0m')
bold_blue=$(printf '\033[1;34m')
red=$(printf '\033[31m')
green=$(printf '\033[32m')

function printTasks {
	rg -N -t md -g '!journal-*' -e "^TODO:.*\+asap.*$"
	rg -N -t md -g '!journal-*' -e "^TODO:.[^\+]*$"
	rg -N -t md -g '!journal-*' -e "^TODO:.*\+later.*$"
}

function sanitize {
	sed '/^$/d;s/\x1b\[[0-9;]*m//g;s/\r//;s/TODO://'
}

function prettify {
	sed 's/:/\n/' | awk '!x[$0]++' | sed "s/^.*\.md$/\n${bold_blue}&${normal}/"	
} 

function refreshTasks() { # $todo=file
	printTasks | sanitize | sort -o "$1"
}

function showDiff() { # $now=file $past=file
	refreshTasks "$1"
	echo -e "\e[1m# $(date "+%d de %B de %Y Ã s %H:%M")"
	echo -e "\e[32m" && comm -23 "$1" "$2" | sed 's/^/+/' 
	echo -e "\e[31m" && comm -13 "$1" "$2" | sed 's/^/-/'
	echo -e "\n${bold_blue}+\t-\t=" && comm -123 --total "$1" "$2"
}

function commitJournal() { # $now=file $past=file $buffer=file $hist=file
	showDiff "$1" "$2" | head -n -2 | sanitize > "$3"
	$EDITOR "$3" &&	cat "$3" >> "$4"
	rm "$3" && mv "$1" "$2"
}

function commitGit() { #$root=path
	last_commit="git -C '$1' log HEAD^..HEAD --pretty=format:'%s'"  
	today_commit=$(date "+%y-%m-%d") 
	git -C "$1" add -A && if [[ "$today_commit" == "$last_commit" ]]; then
		git -C "$1" commit --amend -m "$today_commit"
	else
		git -C "$1" commit -m "$today_commit"
	fi
}

mkdir -p "$root" && cd "$root" || exit # create root dir if it doesn't exist
[ -f "$now" ] || refreshTasks "$now" # create todo if it doesn't exist
[ -f "$past" ] || refreshTasks "$past" # create baseline if it doesn't exist

case $1 in
	show) printTasks | prettify | less -R;;
	diff) showDiff "$now" "$past";;
	commit) commitJournal "$now" "$past" "$buffer" "$hist" && commitGit "$root";; 
esac


#!/bin/bash
root="$HOME/Workshop"
now="$root/journal-now"
past="$root/journal-past"
hist="$root/journal-history"
cats="ASAP TODO WAIT ROUTINE LATER"
buffer="/tmp/$USER/journal-buffer"

[ "$1" ] || (echo -e "HELP:
\t'--show' will print the tasks in screen;
\t'--refresh' will save the tasks to a file;
\t'--diff' will print the changes in the backlog between now and past;
\t'--commit' will save the changes to the history file." && exit)

function printTasks { # $type=string $pretty=bool
       if [ "$2" ]; then
              echo -e "\n\e[1;34m$1"
              rg -p -N -t md -g '!journal-*' "$1: "
       else
              rg -N -t md -g '!journal-*' "$1: "
       fi
}

# TODO: Exclude ignore file from search

function showTasks() { # $cats=string $pretty=bool
	IFS=" " read -r -a c <<< "$cats"
	for i in "${c[@]}"; do
		printTasks "$i" "$2"
	done
}

function sanitizeColors { # $file=file
	sed -i '/^$/d;s/\x1b\[[0-9;]*m//g;s/\r//' "$1"
}

function sanitizeAll { # $file=file
	sed -i '/`/d' "$1" # delete lines that start with `
	sed -i '/^$/d;s/\x1b\[[0-9;]*m//g;s/\r//' "$1" # remove colors and misc
	sed -i 's/ASAP://;s/TODO://;s/WAIT://;s/ROUTINE://;s/LATER://' "$1" # remove the task code
	sort "$1" -o "$1" # sort alphabetically
}

function refreshTasks() { # $cats=string $now=file
	showTasks "$1" > "$2"
	sanitizeAll "$2"
}

function showDiff() { # $cats=string $now=file $past=file
	refreshTasks "$1" "$2"
	echo -e "\e[1m$(date "+%d de %B de %Y Ã s %H:%M")"
	echo -e "\e[32m" && comm -23 "$2" "$3" | sed 's/^/+/' 
	echo -e "\e[31m" && comm -13 "$2" "$3" | sed 's/^/-/'
	echo -e "\n\e[1;34m+\t-\t=" && comm -123 --total "$2" "$3"
}

function commitDiff() { # $cats=string $now=file $past=file $buffer=file $hist=file
	showDiff "$1" "$2" "$3" > "$4" && sanitizeColors "$4"
	$EDITOR "$4" &&	cat "$4" >> "$5"
	rm "$4" && mv "$2" "$3"
}

mkdir -p "$root" && cd "$root" || exit # create root dir if it doesn't exist
[ -f "$now" ] || refreshTasks "$cats" "$now" # create todo if it doesn't exist
[ -f "$past" ] || refreshTasks "$cats" "$past" # create baseline if it doesn't exist

case $1 in
	--show) showTasks "$cats" true | less -R;;
	--refresh) refreshTasks "$cats" "$now";;
	--diff) showDiff "$cats" "$now" "$past";;
	--commit) commitDiff "$cats" "$now" "$past" "$buffer" "$hist";; 
esac


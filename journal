#!/bin/bash
root="$HOME/Workshop"
hist="$root/JOURNAL.md"

# Colors
reset=$(printf '\033[0m')
bold_blue=$(printf '\033[1;34m')
red=$(printf '\033[31m')
green=$(printf '\033[32m')
magenta=$(printf '\033[35m')
cyan=$(printf '\033[36m')

function printTasks {
	rg -N -t md -g '!JOURNAL.md' -e "^TODO:.*\+done.*$"
	rg -N -t md -g '!JOURNAL.md' -e "^TODO:.*\+asap.*$"
	rg -N -t md -g '!JOURNAL.md' -e "^TODO:.[^\+]*$"
	rg -N -t md -g '!JOURNAL.md' -e "^TODO:.*\+later.*$"
}

function sanitize {
	sed 's/\x1b\[[0-9;]*m//g;s/\r//;s/TODO: //' # delete color codes, espace chars and todo preffix
}

function prettify {
	sed 's/:/\n/' | awk '!x[$0]++' | # split & dedup
	sed "s/^.*\.md$/\n${bold_blue}&${reset}/;s/\+done/${green}&${reset}/;s/\+asap/${red}&${reset}/;s/\+later/${magenta}&${reset}/;s/[=<>].[^ ]*/${cyan}&${reset}/" # colorize	
} 

function confirmDialog {
	# shellcheck disable=SC2162 # it don't matter
	read -p "Are you sure? (y/N) " yn;
	case $yn in
		[Yy][Ee][Ss]|[Yy]) return 0;;
		[Nn][Oo]|[Nn]) return 1;;
		*) echo "Please answer yes or no." && return 1;;
	esac
}

function commitDone() { # write tasks done to journal file
	echo -e "## $(date "+%d de %B de %Y Ã s %H:%M")"
	rg -N -t md -g '!journal-*' -e "^TODO:.*\+done.*$" | sed 's/:/: /;s/\+done//' && echo -e ""
}

function deleteDone() {	# delete tasks done from their files
	for i in $(rg -N -t md -g '!journal-*' -e "^TODO:.*\+done.*$" | sed 's/:.*//' | awk '!x[$0]++'); do # iterate over files with tasks done
		sed -i '/\+done/d' "$i"
	done
}

function commitGit() { # non-interactively git commit all changes in root dir
	last_commit="git -C '$root' log HEAD^..HEAD --pretty=format:'%s'"  
	today_commit=$(date "+%y-%m-%d") 
	git -C "$root" add -A && if [[ "$today_commit" == "$last_commit" ]]; then
		git -C "$root" commit --amend -m "$today_commit" # amend if not first commit in the day
	else
		git -C "$root" commit -m "$today_commit"
	fi
}

cd "$root" || exit

case $1 in
	show) printTasks | sanitize | prettify && exit 0;;
	commit) confirmDialog && commitDone | sanitize >> "$hist" && deleteDone && commitGit; exit 0;; 
esac

# Show help if no valid argument is parsed
echo -e "HELP:
\t'show' will print the tasks in screen;
\t'commit' will clean tasks done, write them to a journal and git commit" && exit

